// Code generated by protoc-gen-go. DO NOT EDIT.
// source: music.proto

// Unary RPC : 客戶端發出一個請求到服務端, 服務端就回應一次

package grpc_stream

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type MusicInfo struct {
	MusicName            string   `protobuf:"bytes,1,opt,name=musicName,proto3" json:"musicName,omitempty"`
	MusicType            string   `protobuf:"bytes,2,opt,name=musicType,proto3" json:"musicType,omitempty"`
	MusicUrl             string   `protobuf:"bytes,3,opt,name=musicUrl,proto3" json:"musicUrl,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *MusicInfo) Reset()         { *m = MusicInfo{} }
func (m *MusicInfo) String() string { return proto.CompactTextString(m) }
func (*MusicInfo) ProtoMessage()    {}
func (*MusicInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_c88ba70d01ec9147, []int{0}
}

func (m *MusicInfo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MusicInfo.Unmarshal(m, b)
}
func (m *MusicInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MusicInfo.Marshal(b, m, deterministic)
}
func (m *MusicInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MusicInfo.Merge(m, src)
}
func (m *MusicInfo) XXX_Size() int {
	return xxx_messageInfo_MusicInfo.Size(m)
}
func (m *MusicInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_MusicInfo.DiscardUnknown(m)
}

var xxx_messageInfo_MusicInfo proto.InternalMessageInfo

func (m *MusicInfo) GetMusicName() string {
	if m != nil {
		return m.MusicName
	}
	return ""
}

func (m *MusicInfo) GetMusicType() string {
	if m != nil {
		return m.MusicType
	}
	return ""
}

func (m *MusicInfo) GetMusicUrl() string {
	if m != nil {
		return m.MusicUrl
	}
	return ""
}

// 服務端返回的格式
type MusicResponse struct {
	MusicList            []*MusicInfo `protobuf:"bytes,1,rep,name=musicList,proto3" json:"musicList,omitempty"`
	ReturnType           int32        `protobuf:"varint,2,opt,name=returnType,proto3" json:"returnType,omitempty"`
	ReturnMessage        string       `protobuf:"bytes,3,opt,name=returnMessage,proto3" json:"returnMessage,omitempty"`
	XXX_NoUnkeyedLiteral struct{}     `json:"-"`
	XXX_unrecognized     []byte       `json:"-"`
	XXX_sizecache        int32        `json:"-"`
}

func (m *MusicResponse) Reset()         { *m = MusicResponse{} }
func (m *MusicResponse) String() string { return proto.CompactTextString(m) }
func (*MusicResponse) ProtoMessage()    {}
func (*MusicResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_c88ba70d01ec9147, []int{1}
}

func (m *MusicResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MusicResponse.Unmarshal(m, b)
}
func (m *MusicResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MusicResponse.Marshal(b, m, deterministic)
}
func (m *MusicResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MusicResponse.Merge(m, src)
}
func (m *MusicResponse) XXX_Size() int {
	return xxx_messageInfo_MusicResponse.Size(m)
}
func (m *MusicResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MusicResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MusicResponse proto.InternalMessageInfo

func (m *MusicResponse) GetMusicList() []*MusicInfo {
	if m != nil {
		return m.MusicList
	}
	return nil
}

func (m *MusicResponse) GetReturnType() int32 {
	if m != nil {
		return m.ReturnType
	}
	return 0
}

func (m *MusicResponse) GetReturnMessage() string {
	if m != nil {
		return m.ReturnMessage
	}
	return ""
}

func init() {
	proto.RegisterType((*MusicInfo)(nil), "grpc.stream.MusicInfo")
	proto.RegisterType((*MusicResponse)(nil), "grpc.stream.MusicResponse")
}

func init() { proto.RegisterFile("music.proto", fileDescriptor_c88ba70d01ec9147) }

var fileDescriptor_c88ba70d01ec9147 = []byte{
	// 221 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0xe2, 0xce, 0x2d, 0x2d, 0xce,
	0x4c, 0xd6, 0x2b, 0x28, 0xca, 0x2f, 0xc9, 0x17, 0xe2, 0x4e, 0x2f, 0x2a, 0x48, 0xd6, 0x2b, 0x2e,
	0x29, 0x4a, 0x4d, 0xcc, 0x55, 0x4a, 0xe6, 0xe2, 0xf4, 0x05, 0xc9, 0x79, 0xe6, 0xa5, 0xe5, 0x0b,
	0xc9, 0x70, 0x71, 0x82, 0x15, 0xfa, 0x25, 0xe6, 0xa6, 0x4a, 0x30, 0x2a, 0x30, 0x6a, 0x70, 0x06,
	0x21, 0x04, 0xe0, 0xb2, 0x21, 0x95, 0x05, 0xa9, 0x12, 0x4c, 0x48, 0xb2, 0x20, 0x01, 0x21, 0x29,
	0x2e, 0x0e, 0x30, 0x27, 0xb4, 0x28, 0x47, 0x82, 0x19, 0x2c, 0x09, 0xe7, 0x2b, 0x75, 0x33, 0x72,
	0xf1, 0x82, 0x6d, 0x09, 0x4a, 0x2d, 0x2e, 0xc8, 0xcf, 0x2b, 0x4e, 0x15, 0x32, 0x81, 0x9a, 0xe5,
	0x93, 0x59, 0x5c, 0x22, 0xc1, 0xa8, 0xc0, 0xac, 0xc1, 0x6d, 0x24, 0xa6, 0x87, 0xe4, 0x2e, 0x3d,
	0xb8, 0xa3, 0x82, 0x10, 0x0a, 0x85, 0xe4, 0xb8, 0xb8, 0x8a, 0x52, 0x4b, 0x4a, 0x8b, 0xf2, 0xe0,
	0x4e, 0x60, 0x0d, 0x42, 0x12, 0x11, 0x52, 0xe1, 0xe2, 0x85, 0xf0, 0x7c, 0x53, 0x8b, 0x8b, 0x13,
	0xd3, 0x53, 0xa1, 0x0e, 0x41, 0x15, 0x34, 0x0a, 0xe3, 0xe2, 0x01, 0x9b, 0x1e, 0x9c, 0x5a, 0x54,
	0x96, 0x99, 0x9c, 0x2a, 0xe4, 0xc6, 0xc5, 0xe3, 0x9e, 0x5a, 0x82, 0x08, 0x05, 0x1c, 0x0e, 0x91,
	0x92, 0xc2, 0x14, 0x87, 0xf9, 0x47, 0x83, 0xd1, 0x80, 0x31, 0x89, 0x0d, 0x1c, 0xbc, 0xc6, 0x80,
	0x00, 0x00, 0x00, 0xff, 0xff, 0x3c, 0x9c, 0xd7, 0x54, 0x6d, 0x01, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// MusicServiceClient is the client API for MusicService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type MusicServiceClient interface {
	// RPC方法, 透過UserID 取得用戶資料, 並返回UserName、Age
	GetMusicInfo(ctx context.Context, opts ...grpc.CallOption) (MusicService_GetMusicInfoClient, error)
}

type musicServiceClient struct {
	cc *grpc.ClientConn
}

func NewMusicServiceClient(cc *grpc.ClientConn) MusicServiceClient {
	return &musicServiceClient{cc}
}

func (c *musicServiceClient) GetMusicInfo(ctx context.Context, opts ...grpc.CallOption) (MusicService_GetMusicInfoClient, error) {
	stream, err := c.cc.NewStream(ctx, &_MusicService_serviceDesc.Streams[0], "/grpc.stream.MusicService/GetMusicInfo", opts...)
	if err != nil {
		return nil, err
	}
	x := &musicServiceGetMusicInfoClient{stream}
	return x, nil
}

type MusicService_GetMusicInfoClient interface {
	Send(*MusicInfo) error
	Recv() (*MusicResponse, error)
	grpc.ClientStream
}

type musicServiceGetMusicInfoClient struct {
	grpc.ClientStream
}

func (x *musicServiceGetMusicInfoClient) Send(m *MusicInfo) error {
	return x.ClientStream.SendMsg(m)
}

func (x *musicServiceGetMusicInfoClient) Recv() (*MusicResponse, error) {
	m := new(MusicResponse)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

// MusicServiceServer is the server API for MusicService service.
type MusicServiceServer interface {
	// RPC方法, 透過UserID 取得用戶資料, 並返回UserName、Age
	GetMusicInfo(MusicService_GetMusicInfoServer) error
}

// UnimplementedMusicServiceServer can be embedded to have forward compatible implementations.
type UnimplementedMusicServiceServer struct {
}

func (*UnimplementedMusicServiceServer) GetMusicInfo(srv MusicService_GetMusicInfoServer) error {
	return status.Errorf(codes.Unimplemented, "method GetMusicInfo not implemented")
}

func RegisterMusicServiceServer(s *grpc.Server, srv MusicServiceServer) {
	s.RegisterService(&_MusicService_serviceDesc, srv)
}

func _MusicService_GetMusicInfo_Handler(srv interface{}, stream grpc.ServerStream) error {
	return srv.(MusicServiceServer).GetMusicInfo(&musicServiceGetMusicInfoServer{stream})
}

type MusicService_GetMusicInfoServer interface {
	Send(*MusicResponse) error
	Recv() (*MusicInfo, error)
	grpc.ServerStream
}

type musicServiceGetMusicInfoServer struct {
	grpc.ServerStream
}

func (x *musicServiceGetMusicInfoServer) Send(m *MusicResponse) error {
	return x.ServerStream.SendMsg(m)
}

func (x *musicServiceGetMusicInfoServer) Recv() (*MusicInfo, error) {
	m := new(MusicInfo)
	if err := x.ServerStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

var _MusicService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "grpc.stream.MusicService",
	HandlerType: (*MusicServiceServer)(nil),
	Methods:     []grpc.MethodDesc{},
	Streams: []grpc.StreamDesc{
		{
			StreamName:    "GetMusicInfo",
			Handler:       _MusicService_GetMusicInfo_Handler,
			ServerStreams: true,
			ClientStreams: true,
		},
	},
	Metadata: "music.proto",
}
